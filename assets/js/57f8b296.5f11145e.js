"use strict";(self.webpackChunkciroh_docuhub=self.webpackChunkciroh_docuhub||[]).push([[8712],{4942:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(5893),r=t(1151);const o={},i="Ngen-DataStream",a={id:"products/tools/nextgeninabox/forcing processor",title:"Ngen-DataStream",description:"This repository is designed to generate the required data for the NextGen Framework and to run NextGen In A Box (NGIAB). An ngen run directory, named datadir, you'll find three necessary subfolders: config, forcings, outputs, and an optional fourth subfolder, metadata. While the datadir can have any name, the subfolders must follow this specific naming convention.",source:"@site/docs/products/tools/nextgeninabox/forcing processor.md",sourceDirName:"products/tools/nextgeninabox",slug:"/products/tools/nextgeninabox/forcing processor",permalink:"/docs/products/tools/nextgeninabox/forcing processor",draft:!1,unlisted:!1,editUrl:"https://github.com/CIROH-UA/ciroh-ua_website/edit/main/docs/products/tools/nextgeninabox/forcing processor.md",tags:[],version:"current",frontMatter:{},sidebar:"products",previous:{title:"News",permalink:"/docs/products/tools/nextgeninabox/news"},next:{title:"Data Access",permalink:"/docs/category/data-access"}},c={},d=[{value:"Directory Structure:",id:"directory-structure",level:3},{value:"Steps to Run ForcingProcessor to Generate Forcing Files",id:"steps-to-run-forcingprocessor-to-generate-forcing-files",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ngen-datastream",children:"Ngen-DataStream"}),"\n",(0,s.jsxs)(n.p,{children:["This repository is designed to generate the required data for the NextGen Framework and to run NextGen In A Box (NGIAB). An ngen run directory, named ",(0,s.jsx)(n.code,{children:"data_dir"}),", you'll find three necessary subfolders: ",(0,s.jsx)(n.code,{children:"config"}),", ",(0,s.jsx)(n.code,{children:"forcings"}),", ",(0,s.jsx)(n.code,{children:"outputs"}),", and an optional fourth subfolder, ",(0,s.jsx)(n.code,{children:"metadata"}),". While the ",(0,s.jsx)(n.code,{children:"data_dir"})," can have any name, the subfolders must follow this specific naming convention."]}),"\n",(0,s.jsx)(n.h3,{id:"directory-structure",children:"Directory Structure:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"config"}),": Contains model configuration files and hydrofabric configuration files. More details ",(0,s.jsx)(n.a,{href:"https://github.com/CIROH-UA/ngen-datastream#Configuration-directory",children:"here"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"forcings"}),": Holds catchment-level forcing timeseries files. These are generated using the ",(0,s.jsx)(n.a,{href:"https://github.com/CIROH-UA/ngen-datastream/tree/main/forcingprocessor",children:"forcingprocessor"}),". Forcing files include variables like wind speed, temperature, precipitation, and solar radiation."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"metadata"}),": An optional subfolder, programmatically generated and used internally by ",(0,s.jsx)(n.code,{children:"ngen"}),". Do not edit this folder."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"outputs"}),": Where ",(0,s.jsx)(n.code,{children:"ngen"})," places the output files."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"environment-requirements",children:"Environment Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Python 3.9"}),"\n",(0,s.jsx)(n.h1,{id:"installation-steps",children:"Installation Steps"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 1:"})," Clone the repository"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/CIROH-UA/ngen-datastream.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 2:"})," Install the requirements"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ngen-datastream\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(n.h2,{id:"steps-to-run-forcingprocessor-to-generate-forcing-files",children:"Steps to Run ForcingProcessor to Generate Forcing Files"}),"\n",(0,s.jsx)(n.p,{children:"The ForcingProcessor converts National Water Model (NWM) forcing data into Next Generation National Water Model (ngen) forcing data.\nThe motivation for this tool is NWM data is gridded and stored within netCDFs for each forecast hour.\nNgen inputs this same forcing data, but in the format of per-catchment csv files that hold time series data.\nForcingprocessor is driven by a configuration file that is explained, with an example, in detail below. The config argument accepts an S3 URL."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Step 1:"})," Navigate to the forcingprocessor/src/ directory"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd forcingprocessor/src/\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Step 2:"})})," Generate NWM files\nYou can generate nwm files using the command or give the input files manually\nsuch as\n",(0,s.jsx)(n.a,{href:"https://noaa-nwm-pds.s3.amazonaws.com/nwm.20231106/forcing_short_range/nwm.t00z.short_range.forcing.f001.conus.nc",children:"https://noaa-nwm-pds.s3.amazonaws.com/nwm.20231106/forcing_short_range/nwm.t00z.short_range.forcing.f001.conus.nc"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python nwm_filenames_generator.py conf_nwm_files.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: Provide the S3 bucket address in the config file, not the file in the filenamelist.txt."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Step 3:"})})," Generate weights file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python weight_generator.py 'path to geopackage' 'path to output weights to' 'path to example NWM forcing file'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Use the small_weights.json file for a test run inside the weights directory or download it from the S3 bucket: ",(0,s.jsx)(n.a,{href:"https://ngenresourcesdev.s3.us-east-2.amazonaws.com/10U_weights.json",children:"https://ngenresourcesdev.s3.us-east-2.amazonaws.com/10U_weights.json"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Step 4:"})})," Build the config file\nSet the dates and specify the location for filenamelist.txt and weights.json accordingly in conf.json."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'{\n    "forcing"  : {\n        "start_date"   : "202311060000",\n        "end_date"     : "202311060000",\n        "nwm_file"     : "./filenamelist.txt",  \n        "weight_file"  : "./weights_01.json"\n    },\n    "storage":{\n        "storage_type"     : "local",\n        "output_bucket"    : "",\n        "output_path"      : "./data",\n        "output_file_type" : "csv"\n    },    \n    "run" : {\n        "verbose"       : true,\n        "collect_stats" : true,\n        "proc_threads"  : 3\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Step 5:"})})," Run forcingprocessor"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python forcingprocessor.py conf.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: There might be dependency issues if you use any other Python versions apart from Python 3.9."})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(7294);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);